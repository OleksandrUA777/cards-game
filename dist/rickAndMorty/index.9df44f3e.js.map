{"mappings":"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","sources":["src/rickAndMorty/index.js"],"sourcesContent":["const RESULT_KEY = 'result'\nconst refs = {\n    resetBtn: document.querySelector('.reset'),\n     box: document.querySelector('.box'),\n     moves: document.querySelector('.moves'),\n     reset: document.querySelector('.reset'),\n     score: document.querySelector('.score'),\n     scoreInf: document.querySelector('.last-score')\n}\nrefs.resetBtn.addEventListener('click',resetGame)\n\nlet isPaused = false;\nlet firstPick;\nlet win = 0;\nlet steps = 0\n\nasync function getCharacters(){\nconst BASE_URL = 'https://rickandmortyapi.com/api/character/'\n\nconst randomIds = new Set()\nwhile(randomIds.size < 8){\n    const randomNumber = Math.ceil(Math.random() * 200)\n    randomIds.add(randomNumber)\n} \n// console.log([...randomIds])\nconst charPromises = [...randomIds].map(id => fetch(BASE_URL + id))\nconst responses = await Promise.all(charPromises)\nconst charactersData = await Promise.all(responses.map(response => response.json()))\n\nreturn charactersData\n}\nfunction displayCharacters(charactersArr){\n     //отже ми їх 'розкидуємо', тепер вони рандомні\n     charactersArr.sort(() => 0.5 - Math.random())\n     renderMarkup(charactersArr)\n}\nasync function resetGame(){\n    if(win === 8 && steps !== 0){\n        refs.score.textContent = getResult()\n        steps = 0\n        win = 0\n        renderMoves(steps)\n        \n        refs.scoreInf.classList.remove('is-hidden')\n        }   \n        win = 0\n        steps = 0\n        renderMoves(steps)\n    const charactersArr = await getCharacters()\n    //мені треба по дві однакові картки, отже я роблю масив, 'вливаю' 8 покемонів та ще таких же 8, проблема, вони будуть не в рандомному порядку\n    //кожні 2 картки будуть знаходитись в одних і тих же місцях, отже \n    displayCharacters([...charactersArr,...charactersArr])\n    \n    steps = 0\n    // renderMoves(steps)\n}\nresetGame()\nfunction renderMarkup(arr){\n    const markup = arr.map(char =>{\n        return `<div class=\"card\" onclick=\"cardClickHandler(event)\" \"\n        data-character = \"${char.name}\">\n        <div class =\"front\"> </div>\n        <div class =\"back rotated\">\n        <img src=\"${char.image}\" alt=\"${char.name}\">\n         </div>\n      </div>` \n    }).join('')\nrefs.box.innerHTML = markup\n}\nfunction cardClickHandler(event){\n    const pokemonCard = event.currentTarget\n    const [front,back] = getFrontAndBackCard(pokemonCard)\n\n    //щоб не закривав картку знову, \n    // contains -> для 1 картки, клік - вже перевернув 'rotated'? - так - клік(по тій же картці) - не перевертай знову(вийди з фукнкції)\n    // isPaused -> клік - true, - клік(в любу картку,якщо в ту саму contains) -> isPaused=true? - так - вийди з функції(ДЛЯ ВСІХ карток, ніяку інше не перевернещ)\n    \n    if(front.classList.contains('rotated')|| isPaused){ return }\n   \n    isPaused = true;\n    // front.classList.toggle('rotated')\n    // back.classList.toggle('rotated')\n    rotateCards([front,back])\n\n    if(!firstPick){\n        firstPick = pokemonCard;\n        console.log('first', firstPick)\n        //Клік-!firstPick - firstPick=pokemonCard та FALSE, отже я можу ще раз клікнути\n        //клік - isPaused true? - ні(бо FALSE) - переверни,постав true - немає firstPick(if) - є -> else це буде 2 картка secondCard\n        \n        isPaused = false\n        console.log('paused false')\n    } else{\n        const secondCard = pokemonCard\n\n        const secondPokemonName = secondCard.dataset.character\n        const firstPokemonName = firstPick.dataset.character\n        //якщо не співпали\n        if(firstPokemonName !== secondPokemonName){\n            steps += 1\n            const [firstFront,firstBack] = getFrontAndBackCard(firstPick)\n            console.log(firstFront,firstBack)\n\n        setTimeout(() =>{\n            rotateCards([front,back,firstFront,firstBack])\n            firstPick = null\n            isPaused = false\n\n        renderMoves(steps)    \n            },500)\n\n        }\n        else{\n        steps += 1\n        renderMoves(steps)    \n\n            isPaused = false\n            firstPick = null\n            win +=1\n\n        if(win === 8){\n            getResult()\n        setTimeout(()=>{\n            alert('YOU WON!!!')\n        },200)\n            }\n        }\n    }\n\n   \n\n}\nfunction getFrontAndBackCard(card){\n    const front = card.querySelector('.front')\n    const back = card.querySelector('.back')\n//без масиву було б return value is not iterable\nreturn [front,back]\n}\nfunction rotateCards(cards){\n    cards.forEach(card => card.classList.toggle('rotated'))\n}\nfunction renderMoves(moves){\n    refs.moves.innerHTML = ''\n    refs.moves.insertAdjacentHTML(\"beforeend\",moves)\n}\nfunction getResult(){\n    localStorage.setItem(RESULT_KEY,steps)\n    const lastResult = localStorage.getItem(RESULT_KEY)\n    // renderResult(lastResult)\n    return lastResult\n}\n\nfunction renderResult(result){\n    refs.score.textContent = result\n}"],"names":[],"version":3,"file":"index.9df44f3e.js.map","sourceRoot":"/__parcel_source_root/"}