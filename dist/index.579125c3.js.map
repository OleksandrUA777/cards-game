{"mappings":"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","sources":["src/index.js"],"sourcesContent":["\"use strict\"\nconst refs = {\n    resetBtn: document.querySelector('.reset'),\n    game: document.querySelector('.game'),\n    moves: document.querySelector('.moves')\n}\nrefs.resetBtn.addEventListener('click',resetGame)\n\nlet isPaused = false;\nlet firstPick;\nlet win = 0;\nlet steps = 0\nasync function loadPokemon(){\nconst BASE_URL = 'https://pokeapi.co/api/v2/pokemon/'\n\n    //колода(object) в якій не будуть повторки(сам за цим дивиться)\n    const randomIds = new Set();\n    while(randomIds.size < 8){\n        //беремо рандомні 8 числа до 150\n        const randomNumber = Math.ceil(Math.random() * 150)\n        randomIds.add(randomNumber)\n    }\n    console.log([...randomIds])\n    const pokePromises = [...randomIds].map(id => fetch(BASE_URL + id))\n    const responses = await Promise.all(pokePromises)\n    const pokemonsData = await Promise.all(responses.map(response => response.json()))\n// console.log(pokePromises)\n// console.log(responses)\n// console.log(dataArr)\nreturn pokemonsData\n}\n\nfunction displayPokemon(pokemonsArr){\n    //отже ми їх 'розкидуємо', тепер вони рандомні\n    pokemonsArr.sort(() => 0.5 - Math.random())\n    renderMarkup(pokemonsArr)\n}\nasync function resetGame (){\n    const pokemonsArr = await loadPokemon()\n    //мені треба по дві однакові картки, отже я роблю масив, 'вливаю' 8 покемонів та ще таких же 8, проблема, вони будуть не в рандомному порядку\n    //кожні 2 картки будуть знаходитись в одних і тих же місцях, отже \n    displayPokemon([...pokemonsArr,...pokemonsArr])\n    \n    steps = 0\n    renderMoves(steps)\n}\nresetGame()\nfunction renderMarkup(arr){\n    const markup = arr.map(pokemon => {\n        return `<div class=\"card\" onclick=\"cardClickHandler(event)\" \"\n        data-pokename = \"${pokemon.name}\">\n        <div class =\"front\"> </div>\n        <div class =\"back rotated\">\n        <img src=\"${pokemon.sprites.front_default}\" alt=\"${pokemon.name}\">\n         </div>\n      </div>`\n    }).join('')\n    refs.game.innerHTML = markup\n}\nfunction cardClickHandler(event){\n    const pokemonCard = event.currentTarget\n    const [front,back] = getFrontAndBackCard(pokemonCard)\n\n    //щоб не закривав картку знову, \n    // contains -> для 1 картки, клік - вже перевернув 'rotated'? - так - клік(по тій же картці) - не перевертай знову(вийди з фукнкції)\n    // isPaused -> клік - true, - клік(в любу картку,якщо в ту саму contains) -> isPaused=true? - так - вийди з функції(ДЛЯ ВСІХ карток, ніяку інше не перевернещ)\n    \n    if(front.classList.contains('rotated')|| isPaused){ return }\n   \n    isPaused = true;\n    // front.classList.toggle('rotated')\n    // back.classList.toggle('rotated')\n    rotateCards([front,back])\n\n    if(!firstPick){\n        firstPick = pokemonCard;\n        console.log('first', firstPick)\n        //Клік-!firstPick - firstPick=pokemonCard та FALSE, отже я можу ще раз клікнути\n        //клік - isPaused true? - ні(бо FALSE) - переверни,постав true - немає firstPick(if) - є -> else це буде 2 картка secondCard\n        \n        isPaused = false\n        console.log('paused false')\n    } else{\n        const secondCard = pokemonCard\n\n        const secondPokemonName = secondCard.dataset.pokename\n        const firstPokemonName = firstPick.dataset.pokename\n        //якщо не співпали\n        if(firstPokemonName !== secondPokemonName){\n            steps += 1\n            const [firstFront,firstBack] = getFrontAndBackCard(firstPick)\n            console.log(firstFront,firstBack)\n\n        setTimeout(() =>{\n            rotateCards([front,back,firstFront,firstBack])\n            firstPick = null\n            isPaused = false\n\n        renderMoves(steps)    \n            },500)\n\n        }else{\n            steps += 1\n\n            isPaused = false\n            firstPick = null\n            win +=1\n            console.log(win)\n        if(win === 8){\n            setTimeout(()=>{\n            alert('YOU WON!!!')\n        },200)\n            }\n        }\nconsole.log('steps: ',steps)\n    }\n\n   \n\n}\nfunction getFrontAndBackCard(card){\n    const front = card.querySelector('.front')\n    const back = card.querySelector('.back')\n//без масиву було б return value is not iterable\nreturn [front,back]\n}\nfunction rotateCards(cards){\n    cards.forEach(card => card.classList.toggle('rotated'))\n}\nfunction renderMoves(moves){\n    refs.moves.innerHTML = ''\n    refs.moves.insertAdjacentHTML(\"beforeend\",moves)\n}\n\n//зробити рейтинг локал хост\n// дві картки -> 200 очків,рейтинг\n// коли всі, тоді сума очків / кількість ходів"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}